{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/meta/meta-sender/meta-sender.component.css","webpack:///./src/app/meta/meta-sender/meta-sender.component.html","webpack:///./src/app/meta/meta-sender/meta-sender.component.ts","webpack:///./src/app/meta/meta.module.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/util/util.module.ts","webpack:///./src/app/util/web3.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \" <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n\\n    <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">DonateDapp</a>\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">About</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a  [routerLink]=\\\"['/signup']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">SignUp</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a [routerLink]=\\\"['/login']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">Login</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport {MetaModule} from './meta/meta.module';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatToolbarModule\n} from '@angular/material';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: 'home',\n    component: HomeComponent\n  },\n  { path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n   path: 'login',\n   component: LoginComponent,\n   data: { title: 'Login' }\n },\n {\n  path: 'signup',\n  component: RegisterComponent,\n  data: { title: 'signup' }\n}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    HttpModule,\n    MetaModule,\n\n    RouterModule.forRoot(\n    appRoutes,\n    { enableTracing: true }\n  )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Login</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"login()\\\" #loginForm=\\\"ngForm\\\">\\n        <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\" *ngIf=\\\"message !== ''\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n          {{message}}\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">User Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"UserPassword.username\\\" name=\\\"username\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"UserPassword.password\\\" name=\\\"password\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!loginForm.form.valid\\\">Login</button>\\n          <a  [routerLink]=\\\"['/signup']\\\" class=\\\"nav-link\\\" href=\\\"#\\\"> create account </a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  UserPassword = {}\n  data : any\n  message = \"\"\n  constructor(private router: Router,private http:HttpClient) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n  this.http.post('/api/login',this.UserPassword).subscribe(res => {\n    this.data = res;\n    //to store data in the browser's session\n    localStorage.setItem('jwtToken', this.data.token);\n    this.router.navigate(['home']);\n  }, err => {\n    this.message = err.error.msg;\n  });\n}\n}\n","module.exports = \"\\n.address-field {\\n  width: 400px;\\n}\\n\\n\\nli{\\n  list-style: none;\\n\\n}\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n\\n\\n<div >\\n      <ul>\\n        <li *ngFor=\\\"let account of accounts\\\" (click)=\\\"refreshBalance()\\\" [value]=\\\"account\\\">Your Address is : {{account}}</li>\\n      </ul>\\n    <p>You have <span id=\\\"balance\\\">{{model.balance}}</span> RbCoin</p>\\n</div>\\n\\n<div>\\n  <h1>Send RbCoin</h1>\\n      <input type=\\\"text\\\" matInput id=\\\"amount\\\" placeholder=\\\"Amount\\\" (change)=\\\"setAmount($event)\\\">\\n      <input type=\\\"text\\\" matInput id=\\\"receiver\\\" placeholder=\\\"Receiver Address\\\" (change)=\\\"setReceiver($event)\\\">\\n    <button mat-button id=\\\"send\\\" (click)=\\\"sendCoin()\\\">Send RBCOIN</button>\\n</div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Web3Service} from '../../util/web3.service';\nimport { MatSnackBar } from '@angular/material';\n\ndeclare let require: any;\nconst metacoin_artifacts = require('../../../../build/contracts/MetaCoin.json');\n\n@Component({\n  selector: 'app-meta-sender',\n  templateUrl: './meta-sender.component.html',\n  styleUrls: ['./meta-sender.component.css']\n})\nexport class MetaSenderComponent implements OnInit {\n  accounts: string[];\n  MetaCoin: any;\n\n  model = {\n    amount: 5,\n    receiver: '',\n    balance: 0,\n    account: ''\n  };\n\n  status = '';\n\n  constructor(private web3Service: Web3Service, private matSnackBar: MatSnackBar) {\n    console.log('Constructor: ' + web3Service);\n  }\n\n  ngOnInit(): void {\n    console.log('OnInit: ' + this.web3Service);\n    console.log(this);\n    this.watchAccount();\n    this.web3Service.artifactsToContract(metacoin_artifacts)\n      .then((MetaCoinAbstraction) => {\n        this.MetaCoin = MetaCoinAbstraction;\n      });\n  }\n\n  watchAccount() {\n    this.web3Service.accountsObservable.subscribe((accounts) => {\n      this.accounts = accounts;\n      this.model.account = accounts[0];\n      this.refreshBalance();\n    });\n  }\n\n  setStatus(status) {\n    this.matSnackBar.open(status, null, {duration: 3000});\n  }\n\n  async sendCoin() {\n    if (!this.MetaCoin) {\n      this.setStatus('Metacoin is not loaded, unable to send transaction');\n      return;\n    }\n\n    const amount = this.model.amount;\n    const receiver = this.model.receiver;\n\n    console.log('Sending coins' + amount + ' to ' + receiver);\n\n    this.setStatus('Initiating transaction... (please wait)');\n    try {\n      const deployedMetaCoin = await this.MetaCoin.deployed();\n      const transaction = await deployedMetaCoin.sendCoin.sendTransaction(receiver, amount, {from: this.model.account});\n\n      if (!transaction) {\n        this.setStatus('Transaction failed!');\n      } else {\n        this.setStatus('Transaction complete!');\n      }\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error sending coin; see log.');\n    }\n  }\n\n  async refreshBalance() {\n    console.log('Refreshing balance');\n\n    try {\n      const deployedMetaCoin = await this.MetaCoin.deployed();\n      console.log(deployedMetaCoin);\n      console.log('Account', this.model.account);\n      const metaCoinBalance = await deployedMetaCoin.getBalance.call(this.model.account);\n      console.log('Found balance: ' + metaCoinBalance);\n      this.model.balance = metaCoinBalance;\n    } catch (e) {\n      console.log(e);\n      this.setStatus('Error getting balance; see log.');\n    }\n  }\n\n  setAmount(e) {\n    console.log('Setting amount: ' + e.target.value);\n    this.model.amount = e.target.value;\n  }\n\n  setReceiver(e) {\n    console.log('Setting receiver: ' + e.target.value);\n    this.model.receiver = e.target.value;\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MetaSenderComponent} from './meta-sender/meta-sender.component';\nimport {UtilModule} from '../util/util.module';\nimport {RouterModule} from '@angular/router';\nimport {\n  MatButtonModule,\n  MatCardModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatOptionModule,\n  MatSelectModule, MatSnackBarModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    CommonModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatSnackBarModule,\n    RouterModule,\n    UtilModule\n  ],\n  declarations: [MetaSenderComponent],\n  exports: [MetaSenderComponent]\n})\nexport class MetaModule {\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Register</h1>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <form (ngSubmit)=\\\"register()\\\" #registerForm=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">User Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"User.username\\\" name=\\\"username\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Email:</label>\\n          <input type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"User.email\\\" name=\\\"email\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"name\\\">Password:</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"User.password\\\" name=\\\"password\\\" required>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.form.valid\\\">Sign up</button>\\n          <a  [routerLink]=\\\"['/login']\\\" class=\\\"nav-link\\\" href=\\\"#\\\">if you have already account login</a>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n//User = {};\nUser = {};\nmessage = '';\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit() {\n  }\n\nregister() {\n  console.log(\"Abdullllllatiiiiif\",this.User)\n    this.http.post('/api/register', this.User)\n      .subscribe(res => {\n          this.router.navigate(['/login']);\n        }, (err) => {\n          console.log(err);\n        }\n      );\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Web3Service} from './web3.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    Web3Service\n  ],\n  declarations: []\n})\nexport class UtilModule {\n}\n","import {Injectable} from '@angular/core';\nimport * as contract from 'truffle-contract';\nimport {Subject} from 'rxjs/Rx';\ndeclare let require: any;\nconst Web3 = require('web3');\n\n\ndeclare let window: any;\n\n@Injectable()\nexport class Web3Service {\n  private web3: any;\n  private accounts: string[];\n  public ready = false;\n  public MetaCoin: any;\n  public accountsObservable = new Subject<string[]>();\n\n  constructor() {\n    window.addEventListener('load', (event) => {\n      this.bootstrapWeb3();\n    });\n  }\n\n  public bootstrapWeb3() {\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof window.web3 !== 'undefined') {\n      // Use Mist/MetaMask's provider\n      this.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      console.log('No web3? You should consider trying MetaMask!');\n\n      // Hack to provide backwards compatibility for Truffle, which uses web3js 0.20.x\n      Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send;\n      // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)\n      this.web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\n    }\n\n    setInterval(() => this.refreshAccounts(), 100);\n  }\n\n  public async artifactsToContract(artifacts) {\n    if (!this.web3) {\n      const delay = new Promise(resolve => setTimeout(resolve, 100));\n      await delay;\n      return await this.artifactsToContract(artifacts);\n    }\n\n    const contractAbstraction = contract(artifacts);\n    contractAbstraction.setProvider(this.web3.currentProvider);\n    return contractAbstraction;\n\n  }\n\n  private refreshAccounts() {\n    this.web3.eth.getAccounts((err, accs) => {\n      console.log('Refreshing accounts');\n      if (err != null) {\n        console.warn('There was an error fetching your accounts.');\n        return;\n      }\n\n      // Get the initial account balance so it can be displayed.\n      if (accs.length === 0) {\n        console.warn('Couldn\\'t get any accounts! Make sure your Ethereum client is configured correctly.');\n        return;\n      }\n\n      if (!this.accounts || this.accounts.length !== accs.length || this.accounts[0] !== accs[0]) {\n        console.log('Observed new accounts');\n\n        this.accountsObservable.next(accs);\n        this.accounts = accs;\n      }\n\n      this.ready = true;\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}